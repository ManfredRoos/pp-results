
Biojs.ExpressionLoader=Biojs.extend({expressions:null,min:99999,max:-99999,column:-1,colorData:null,constructor:function(options){var self=this;if(window.File&&window.FileReader&&window.FileList&&window.Blob){$("#"+self.opt.target).html('<input type="file" name="files[]" class="button-link" /><div class="fake-file">'+self.opt.label+'</div><br/><output></output>');$("#"+self.opt.target+' .fake-file').click(function(){$("#"+self.opt.target+" .button-link").click();});$("#"+self.opt.target+" .button-link").change(function(evt){self._handleFileSelect(evt);});}else{self.raiseEvent('onError',{error:'Expression data can\'t be loaded in your browser.'});}},opt:{target:"YourOwnDivId",label:"Color by Expression File..."},eventTypes:["onFileLoaded","onFileRemoved","onError",],_handleFileSelect:function(evt){var self=this;var files=evt.target.files;var column=1;for(var i=0,f;f=files[i];i++){if(!f.type.match('text.*')){$('#'+self.opt.target+' output').html("The selected file is not text, its type is "+f.type);self.raiseEvent('onError',{error:"The selected file is not text, its type is "+f.type});continue;}
var reader=new FileReader();reader.onload=(function(theFile){return function(e){var exp=self.parseTabDelimitedString(e.target.result);if(exp!=null){self.startWizzard();}};})(f);reader.readAsText(f);}},parseTabDelimitedString:function(text){var self=this;self.expressions={};self.min=99999;self.max=-99999;self.column=-1;self.colorData=null;var lines=text.split("\n");var columns=-1;for(var i=0;i<lines.length;i++){if(lines[i].indexOf("#")==0)
continue;var line=lines[i].split("\t");if(columns==-1){columns=line.length;if(columns<2){self.raiseEvent('onError',{error:"The file at requires at least 2 columns (Id and Expression)"});$('#'+self.opt.target+' output').html("The file at requires at least 2 columns (Id and Expression)");self.expressions=null;break;}}else if(columns!=line.length){self.raiseEvent('onError',{error:"The number of columns is different between lines "+i+" and "+(i+1)});$('#'+self.opt.target+' output').html("The number of columns is different between lines "+i+" and "+(i+1));self.expressions=null;columns=-1;break;}
var exps=line.splice(1);self.expressions[line[0]]=exps;for(var j=0;j<exps.length;j++){if(self.min>(exps[j]*1))self.min=exps[j]*1;if(self.max<(exps[j]*1))self.max=exps[j]*1;}}
return self.expressions;},getFormatedTable:function(rows){var self=this;var i=0;var loadedText="<table>"
var columns=0;for(var p in self.expressions){if(rows==i++)break;loadedText+="<tr><th>"+p+"</th><td>"+self.expressions[p].join("</td><td>")+"</td></tr>";columns=self.expressions[p].length;}
loadedText+="<tr><th>Column to Use:</th>";var col=(self.column!=-1)?self.column:0;for(var i=0;i<columns;i++){var selected=(i==col)?"checked":"";loadedText+='<td><input type="radio" name="column" value="'+i+'" '+selected+' /></td>';selected="";}
loadedText+="</tr></table>";return loadedText;},startWizzard:function(){var self=this;$('#'+self.opt.target+' output').html('<div class="dialog-modal" title="Select Column"><p>'+self.getFormatedTable(5)+'</p></div>');$('#'+self.opt.target+" .dialog-modal").dialog({height:400,width:600,modal:true,buttons:{Next:function(){self.column=1*$('.dialog-modal input[name="column"]:checked').val();$(this).dialog("destroy");self.wizzardStep2();}}});},wizzardStep2:function(){var self=this;var min=(self.colorData!=null)?self.colorData.min:self.min,max=(self.colorData!=null)?self.colorData.max:self.max,center=(self.colorData!=null)?self.colorData.center:0,colorMin=(self.colorData!=null)?self.colorData.colorMin:"#FF0000",colorMax=(self.colorData!=null)?self.colorData.colorMax:"#00FF00",colorCenter=(self.colorData!=null)?self.colorData.colorCenter:"#000000";var loadedText="<table><tr><th>Min:</th><td><input type='text' id='min' value='"+min+"'/></td><td>";loadedText+='<input type="hidden" id="colorMin" name="colorMin" class="color-picker" size="6" />';loadedText+="</td></tr><tr><th>Center:</th><td><input type='text' id='center' value='"+center+"'/></td><td>";loadedText+='<input type="hidden" id="colorCenter" name="colorCenter" class="color-picker" size="6" />';loadedText+="</td></tr><tr><th>Max:</th><td><input type='text' id='max' value='"+max+"'/></td><td>";loadedText+='<input type="hidden" id="colorMax" name="colorMax" class="color-picker" size="6" />';loadedText+="</td></tr></table>";$('#'+self.opt.target+' output').html('<div class="dialog-modal" title="Select Range and Colors"><p>'+loadedText+'</p></div>');$("#colorMax").miniColors({letterCase:'uppercase'}).miniColors('value',colorMax);$("#colorCenter").miniColors({letterCase:'uppercase'}).miniColors('value',colorCenter);$("#colorMin").miniColors({letterCase:'uppercase'}).miniColors('value',colorMin);$('#'+self.opt.target+" .dialog-modal").dialog({height:400,width:600,modal:true,buttons:{Apply:function(){self.colorData={min:$("#min").val(),center:$("#center").val(),max:$("#max").val(),colorMin:$("#colorMin").val(),colorCenter:$("#colorCenter").val(),colorMax:$("#colorMax").val()};self.calculateExtrapolingData(self.colorData);$("#colorCenter").miniColors('destroy');$("#colorMin").miniColors('destroy');$("#colorMax").miniColors('destroy');$(this).dialog("destroy");$(" .dialog-modal").remove();$("#"+self.opt.target+" .fake-file").html("Change File...");$("#"+self.opt.target+" .exp-edit").remove();$("#"+self.opt.target+" .exp-remove").remove();$("#"+self.opt.target+" .fake-file").after("<div class='exp-remove'></div>");$("#"+self.opt.target+" .exp-remove").click(function(){self.expressions=null;self.min=99999;self.max=-99999;self.column=-1;self.colorData=null;$("#"+self.opt.target+" .exp-edit").remove();$("#"+self.opt.target+" .exp-remove").remove();$("#"+self.opt.target+" .fake-file").html(self.opt.label);$("#"+self.opt.target+" .button-link").val('');self.raiseEvent('onFileRemoved',{});});$("#"+self.opt.target+" .fake-file").after("<div class='exp-edit'></div>");$("#"+self.opt.target+" .exp-edit").click(function(){self.startWizzard();});self.raiseEvent('onFileLoaded',{expressions:self.expressions,column:self.column,colorData:self.colorData});}}});},_hexToR:function(h){var self=this;return parseInt((self._cutHex(h)).substring(0,2),16)},_hexToG:function(h){var self=this;return parseInt((self._cutHex(h)).substring(2,4),16)},_hexToB:function(h){var self=this;return parseInt((self._cutHex(h)).substring(4,6),16)},_cutHex:function(h){return(h.charAt(0)=="#")?h.substring(1,7):h},_getM:function(x1,y1,x2,y2){return(y1-y2)/(x1-x2);},_getB:function(m,x,y){return y-m*x;},_getY:function(m,b,x){return parseInt(m*x+b);},calculateExtrapolingData:function(colorData){var self=this;var minRed=self._hexToR(colorData.colorMin),centerRed=self._hexToR(colorData.colorCenter),maxRed=self._hexToR(colorData.colorMax),minGreen=self._hexToG(colorData.colorMin),centerGreen=self._hexToG(colorData.colorCenter),maxGreen=self._hexToG(colorData.colorMax),minBlue=self._hexToB(colorData.colorMin),centerBlue=self._hexToB(colorData.colorCenter),maxBlue=self._hexToB(colorData.colorMax);var mRedN=self._getM(colorData.min,minRed,colorData.center,centerRed),mGreenN=self._getM(colorData.min,minGreen,colorData.center,centerGreen),mBlueN=self._getM(colorData.min,minBlue,colorData.center,centerBlue);var mRedP=self._getM(colorData.center,centerRed,colorData.max,maxRed),mGreenP=self._getM(colorData.center,centerGreen,colorData.max,maxGreen),mBlueP=self._getM(colorData.center,centerBlue,colorData.max,maxBlue);var bRedN=self._getB(mRedN,colorData.min,minRed),bGreenN=self._getB(mGreenN,colorData.min,minGreen),bBlueN=self._getB(mBlueN,colorData.min,minBlue);var bRedP=self._getB(mRedP,colorData.max,maxRed),bGreenP=self._getB(mGreenP,colorData.max,maxGreen),bBlueP=self._getB(mBlueP,colorData.max,maxBlue);colorData.mRedN=mRedN;colorData.mGreenN=mGreenN;colorData.mBlueN=mBlueN;colorData.mRedP=mRedP;colorData.mGreenP=mGreenP;colorData.mBlueP=mBlueP;colorData.bRedN=bRedN;colorData.bGreenN=bGreenN;colorData.bBlueN=bBlueN;colorData.bRedP=bRedP;colorData.bGreenP=bGreenP;colorData.bBlueP=bBlueP;return colorData;},getRGBString:function(value){var self=this;if(value>self.colorData.center)
return"rgb("+self._getY(self.colorData.mRedP,self.colorData.bRedP,value)+","+self._getY(self.colorData.mGreenP,self.colorData.bGreenP,value)+","+self._getY(self.colorData.mBlueP,self.colorData.bBlueP,value)+")";else
return"rgb("+self._getY(self.colorData.mRedN,self.colorData.bRedN,value)+","+self._getY(self.colorData.mGreenN,self.colorData.bGreenN,value)+","+self._getY(self.colorData.mBlueN,self.colorData.bBlueN,value)+")";}});